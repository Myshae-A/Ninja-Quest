package main;

import entity.NPC_Astro;
import entity.NPC_BigRock;
import entity.NPC_Felix;
import entity.NPC_Hero_Chad;
import entity.NPC_Hero_Daniel;
import entity.NPC_Hero_Esther;
import entity.NPC_Hero_Joy;
import entity.NPC_Hero_Reuben;
import entity.NPC_Merchant;
import entity.NPC_Miriam;
import entity.NPC_OldMan;
import entity.NPC_Paul;
import entity.NPC_Pixal;
import entity.NPC_Quincy;
import entity.NPC_Sam;
import entity.NPC_Sarah;
import entity.NPC_Timothy;
import entity.NPC_Traveler;
import monster.MON_Bat;
import monster.MON_BlueSlime;
import monster.MON_FinalIslandBigSlime;
import monster.MON_FinalIslandSmallSlime;
import monster.MON_GreenSlime;
import monster.MON_MistyMeadowsBigSlime;
import monster.MON_MistyMeadowsSmallSlime;
import monster.MON_Orc;
import monster.MON_Orc_Frost;
import monster.MON_Pirate;
import monster.MON_RedSlime;
import monster.MON_Samurai;
import monster.MON_Skeleton;
import monster.MON_Skeleton_Boss;
import monster.MON_Skeleton_Dark;
import monster.MON_SlimeBoss;
import object.OBJ_Axe;
import object.OBJ_Camp_Fire;
import object.OBJ_Chest;
import object.OBJ_Craftable_Tnt;
import object.OBJ_Craftable_Woodenplank;
import object.OBJ_Door;
import object.OBJ_Door_Down;
import object.OBJ_Door_Iron;
import object.OBJ_Emblem_Craftsman;
import object.OBJ_Emblem_Guardian;
import object.OBJ_Emblem_Specialist;
import object.OBJ_Emblem_Warrior;
import object.OBJ_Eternal_Ring;
import object.OBJ_Hero_Crafting_Table;
import object.OBJ_Hero_Guardian_Field;
import object.OBJ_Hero_Special_Cloak;
import object.OBJ_Hero_Warrior_Sword;
import object.OBJ_Inside_Bed_Blue;
import object.OBJ_Inside_Bed_Purple;
import object.OBJ_Inside_Bed_Red;
import object.OBJ_Inside_Bookshelf;
import object.OBJ_Inside_Chair_Blue;
import object.OBJ_Inside_Chair_Purple;
import object.OBJ_Inside_Chair_Red;
import object.OBJ_Inside_Drawer;
import object.OBJ_Inside_Table;
import object.OBJ_Key;
import object.OBJ_Lantern;
import object.OBJ_Lantern_Blue;
import object.OBJ_Mario_Star;
import object.OBJ_Monster_Spawner;
import object.OBJ_Ninjastar;
import object.OBJ_Pickaxe;
import object.OBJ_Pink_Ghost;
import object.OBJ_Potion_Big_Blue;
import object.OBJ_Potion_Big_Red;
import object.OBJ_Potion_Max_Red;
import object.OBJ_Potion_Red;
import object.OBJ_Rock;
import object.OBJ_Rock_forPlayer;
import object.OBJ_Shield_Metal;
import object.OBJ_Shield_Wood;
import object.OBJ_Sign;
import object.OBJ_Skull;
import object.OBJ_Stat_Ammo;
import object.OBJ_Stat_Attack;
import object.OBJ_Stat_Defense;
import object.OBJ_Stat_HP;
import object.OBJ_Sword_Blue;
import object.OBJ_Sword_Metal;
import object.OBJ_Sword_Normal;
import object.OBJ_Tent;
import object.OBJ_Travel_Token;
import tile_interactive.IT_DestructibleWall;
import tile_interactive.IT_DryTree;
import tile_interactive.IT_MetalPlate;
import tile_interactive.IT_MistyTree;

public class AssetSetter {

	GamePanel gp;
	
	public AssetSetter(GamePanel gp) {
		this.gp = gp;
	}
	
	public void setObject() {
		
		int mapNum = 0; // Beginning Island
		int i = 0;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Ninjastar(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*33;//33 // Switched places w blue slime
		gp.obj[mapNum][i].worldY = gp.tileSize*7;//7
		i++;
		gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*11;
		gp.obj[mapNum][i].worldY = gp.tileSize*40;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*12;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Lantern_Blue(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*30;
		gp.obj[mapNum][i].worldY = gp.tileSize*29;
		i++;
		gp.obj[mapNum][i] = new OBJ_Tent(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*39;
		gp.obj[mapNum][i].worldY = gp.tileSize*41;
		i++;
		gp.obj[mapNum][i] = new OBJ_Camp_Fire(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*16;
		i++;
		gp.obj[mapNum][i] = new OBJ_Monster_Spawner(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*28;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
//		gp.obj[mapNum][i] = new OBJ_Travel_Stone(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*25;
//		gp.obj[mapNum][i].worldY = gp.tileSize*23;
//		i++;
		
		mapNum = 1; // Misty Meadows (or Mt Shuriken for now)
		i = 0;
//		gp.obj[mapNum][i] = new OBJ_Travel_Stone(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*28;
//		gp.obj[mapNum][i].worldY = gp.tileSize*21;
//		i++;
		// Can place monsters or ANY entity
		// on a different map now, like so
		
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*53;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*26;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*26;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*15;
		gp.obj[mapNum][i].worldY = gp.tileSize*40;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*40;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*16;
		gp.obj[mapNum][i].worldY = gp.tileSize*42;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*15;
		gp.obj[mapNum][i].worldY = gp.tileSize*26;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*16;
		gp.obj[mapNum][i].worldY = gp.tileSize*26;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*28;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*48;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*28;
		gp.obj[mapNum][i].worldY = gp.tileSize*46;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*48;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*48;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*28;
		gp.obj[mapNum][i].worldY = gp.tileSize*50;
		i++;
		
		
		
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*86;
		gp.obj[mapNum][i].worldY = gp.tileSize*92;// trader
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*92;// secret chest
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*30;// house purple
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*40;// house
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*15;
		gp.obj[mapNum][i].worldY = gp.tileSize*43;// house
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*51;// house purple
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Skull(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*83;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*93;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*83;
		gp.obj[mapNum][i].worldY = gp.tileSize*70;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Potion_Big_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*48;
		i++;
		gp.obj[mapNum][i] = new OBJ_Monster_Spawner(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*84;
		i++;
		gp.obj[mapNum][i] = new OBJ_Tent(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*22;
		i++;
		gp.obj[mapNum][i] = new OBJ_Tent(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*64;
		gp.obj[mapNum][i].worldY = gp.tileSize*9;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Potion_Max_Red(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*55;
		gp.obj[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Shield_Metal(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*90;
		i++;
		
		mapNum = 2; // Boss stage
		i = 2; // START i at 2! bc there is loot that spawns after beatBoss which has i = 0 and i = 1
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*10;
		i++;
		
		mapNum = 3;
		i = 0;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Key(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Pickaxe(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*39;
		gp.obj[mapNum][i].worldY = gp.tileSize*41;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*16;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Potion_Big_Blue(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Potion_Big_Red(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Iron(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*23;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*24;
		i++;
		
		
		// I de-updated to Java 1.8 to make it more compatible w other ppl
		mapNum = 4; // Dungeon02
		i = 1; // 0 for boss drop!!!
//		gp.obj[mapNum][i] = new OBJ_Chest(gp);
//		gp.obj[mapNum][i].setLoot(new OBJ_Lantern_Blue(gp));
//		gp.obj[mapNum][i].worldX = gp.tileSize*25;//33 // Switched places w blue slime
//		gp.obj[mapNum][i].worldY = gp.tileSize*8;//7
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Door_Iron(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*25;
//		gp.obj[mapNum][i].worldY = gp.tileSize*15;
//		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		
		mapNum = 5;
		i = 3;
//		gp.obj[mapNum][i] = new OBJ_Emblem_Craftsman(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*50;
//		gp.obj[mapNum][i].worldY = gp.tileSize*32;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Emblem_Guardian(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*48;
//		gp.obj[mapNum][i].worldY = gp.tileSize*34;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Emblem_Specialist(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*50;
//		gp.obj[mapNum][i].worldY = gp.tileSize*37;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Emblem_Warrior(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*52;
//		gp.obj[mapNum][i].worldY = gp.tileSize*34;
//		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*64;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*50;
		gp.obj[mapNum][i].worldY = gp.tileSize*49;// after beating final boss
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*50;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Eternal_Ring(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*50;
		gp.obj[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*50;
		gp.obj[mapNum][i].worldY = gp.tileSize*27;
		i++;
		
		mapNum = 6;
		i = 0;
//		
//		gp.obj[mapNum][199] = new OBJ_Hero_Crafting_Table(gp);
//		gp.obj[mapNum][199].worldX = gp.tileSize*80;
//		gp.obj[mapNum][199].worldY = gp.tileSize*82;
//		
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Pink_Ghost(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*88;//33 // Switched places w blue slime
		gp.obj[mapNum][i].worldY = gp.tileSize*93;//7
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*71;
		gp.obj[mapNum][i].worldY = gp.tileSize*27;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*58;
		gp.obj[mapNum][i].worldY = gp.tileSize*81;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*17;
		gp.obj[mapNum][i].worldY = gp.tileSize*16;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*49;
		gp.obj[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*21;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*39;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*8;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*12;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Monster_Spawner(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*87;
		gp.obj[mapNum][i].worldY = gp.tileSize*91;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Lantern(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*11;
		gp.obj[mapNum][i].worldY = gp.tileSize*16;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Door(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*35;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Travel_Token(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*93;
		gp.obj[mapNum][i].worldY = gp.tileSize*8;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Tent(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*29;//33 // Switched places w blue slime
		gp.obj[mapNum][i].worldY = gp.tileSize*66;//7
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Shield_Wood(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*35;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Sword_Blue(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*11;
		gp.obj[mapNum][i].worldY = gp.tileSize*92;
		i++;
		
		// Player House
		gp.obj[mapNum][i] = new OBJ_Axe(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*6;
		i++;
		gp.obj[mapNum][i] = new OBJ_Chest(gp);
		gp.obj[mapNum][i].setLoot(new OBJ_Rock_forPlayer(gp));
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*17;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;
		i++;
//		gp.obj[mapNum][i] = new OBJ_Inside_Drawer(gp); // put a plant here if u get the chance...
//		gp.obj[mapNum][i].worldX = gp.tileSize*22;
//		gp.obj[mapNum][i].worldY = gp.tileSize*13;
//		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*16;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*15;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*14;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*12;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*17;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Drawer(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Drawer(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*7;
		i++;
		
		
		//------------------------------------------------------------------
		// Rest of the WORLD, not in any order
//		gp.obj[mapNum][i] = new OBJ_Door_Left(gp,true);//
//		gp.obj[mapNum][i].worldX = gp.tileSize*23;
//		gp.obj[mapNum][i].worldY = gp.tileSize*12;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Door_Left(gp,false);
//		gp.obj[mapNum][i].worldX = gp.tileSize*65;
//		gp.obj[mapNum][i].worldY = gp.tileSize*21;//
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Door_Left(gp,true);
//		gp.obj[mapNum][i].worldX = gp.tileSize*13;
//		gp.obj[mapNum][i].worldY = gp.tileSize*93;//
//		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);//
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*10;
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*71;
		gp.obj[mapNum][i].worldY = gp.tileSize*38;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*29;
		gp.obj[mapNum][i].worldY = gp.tileSize*56;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*71;
		gp.obj[mapNum][i].worldY = gp.tileSize*66;// PURPLE
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*63;
		gp.obj[mapNum][i].worldY = gp.tileSize*66;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*84;
		gp.obj[mapNum][i].worldY = gp.tileSize*54;//
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*29;
		gp.obj[mapNum][i].worldY = gp.tileSize*73;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*81;
		gp.obj[mapNum][i].worldY = gp.tileSize*83;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*63;
		gp.obj[mapNum][i].worldY = gp.tileSize*13;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*56;
		gp.obj[mapNum][i].worldY = gp.tileSize*35;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*79;
		gp.obj[mapNum][i].worldY = gp.tileSize*36;//
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*14;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*63;
		gp.obj[mapNum][i].worldY = gp.tileSize*23;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*78;
		gp.obj[mapNum][i].worldY = gp.tileSize*11;// PURPLE
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*80;
		gp.obj[mapNum][i].worldY = gp.tileSize*40;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,true);
		gp.obj[mapNum][i].worldX = gp.tileSize*12;
		gp.obj[mapNum][i].worldY = gp.tileSize*91;//
		i++;
		gp.obj[mapNum][i] = new OBJ_Door_Down(gp,false);
		gp.obj[mapNum][i].worldX = gp.tileSize*84;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;//
		i++;
		
//		gp.obj[mapNum][i] = new OBJ_Door_Right(gp,false);
//		gp.obj[mapNum][i].worldX = gp.tileSize*81;
//		gp.obj[mapNum][i].worldY = gp.tileSize*69;//
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Door_Right(gp,false);
//		gp.obj[mapNum][i].worldX = gp.tileSize*75;
//		gp.obj[mapNum][i].worldY = gp.tileSize*22;//
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Door_Right(gp,false);
//		gp.obj[mapNum][i].worldX = gp.tileSize*79;
//		gp.obj[mapNum][i].worldY = gp.tileSize*42;//
//		i++;
		
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*56;
		gp.obj[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*78;
		gp.obj[mapNum][i].worldY = gp.tileSize*55;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*65;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*59;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*68;
		gp.obj[mapNum][i].worldY = gp.tileSize*8;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*59;
		gp.obj[mapNum][i].worldY = gp.tileSize*27;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*85;
		gp.obj[mapNum][i].worldY = gp.tileSize*31;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*81;
		gp.obj[mapNum][i].worldY = gp.tileSize*64;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*74;
		gp.obj[mapNum][i].worldY = gp.tileSize*68;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*85;
		gp.obj[mapNum][i].worldY = gp.tileSize*41;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bed_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*81;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*57;
		gp.obj[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*77;
		gp.obj[mapNum][i].worldY = gp.tileSize*56;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*64;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*60;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*71;
		gp.obj[mapNum][i].worldY = gp.tileSize*9;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*60;
		gp.obj[mapNum][i].worldY = gp.tileSize*28;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*84;
		gp.obj[mapNum][i].worldY = gp.tileSize*31;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*85;
		gp.obj[mapNum][i].worldY = gp.tileSize*64;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*75;
		gp.obj[mapNum][i].worldY = gp.tileSize*68;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*85;
		gp.obj[mapNum][i].worldY = gp.tileSize*44;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*82;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*82;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*29;
		gp.obj[mapNum][i].worldY = gp.tileSize*65;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*29;
		gp.obj[mapNum][i].worldY = gp.tileSize*64;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*81;
		gp.obj[mapNum][i].worldY = gp.tileSize*41;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*77;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*62;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*73;
		gp.obj[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*83;
		gp.obj[mapNum][i].worldY = gp.tileSize*23;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*71;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*78;
		gp.obj[mapNum][i].worldY = gp.tileSize*33;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*76;
		gp.obj[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*86;
		gp.obj[mapNum][i].worldY = gp.tileSize*64;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*55;
		gp.obj[mapNum][i].worldY = gp.tileSize*27;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*62;
		gp.obj[mapNum][i].worldY = gp.tileSize*12;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*79;
		gp.obj[mapNum][i].worldY = gp.tileSize*55;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Table(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*64;
		gp.obj[mapNum][i].worldY = gp.tileSize*19;
		i++;
		
		
		
		
		// TOWN HALL
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*38;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Blue(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*67;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*34;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*65;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Red(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*65;
		i++;
		
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*31;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*63;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Chair_Purple(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*63;
		i++;
		
		
		// BOOKSHELVES IN TOWN HALL
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*31;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*33;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*34;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*36;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*38;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*58;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*31;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*33;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*34;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*36;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*38;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*39;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*17;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*60;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*31;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*33;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*34;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*36;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*38;
		gp.obj[mapNum][i].worldY = gp.tileSize*71;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*17;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*18;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*19;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*20;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*21;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*22;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*23;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*24;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*25;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*26;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*27;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		//-----------------------------------------------------------------------
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*31;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*32;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*33;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*34;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*35;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*36;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*37;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*38;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*39;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.obj[mapNum][i] = new OBJ_Inside_Bookshelf(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*40;
		gp.obj[mapNum][i].worldY = gp.tileSize*69;
		i++;
		
		mapNum = 7;
		i = 5;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*13;
		gp.obj[mapNum][i].worldY = gp.tileSize*6;
		i++;
		gp.obj[mapNum][i] = new OBJ_Sign(gp);
		gp.obj[mapNum][i].worldX = gp.tileSize*36;
		gp.obj[mapNum][i].worldY = gp.tileSize*43;
		i++;
//		gp.obj[mapNum][i] = new OBJ_Stat_Ammo(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*20;
//		gp.obj[mapNum][i].worldY = gp.tileSize*20;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Stat_Attack(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*21;
//		gp.obj[mapNum][i].worldY = gp.tileSize*20;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Stat_Defense(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*20;
//		gp.obj[mapNum][i].worldY = gp.tileSize*22;
//		i++;
//		gp.obj[mapNum][i] = new OBJ_Stat_HP(gp);
//		gp.obj[mapNum][i].worldX = gp.tileSize*21;
//		gp.obj[mapNum][i].worldY = gp.tileSize*21;
//		i++;
		
	}
	public void setNPC() {
		
		int mapNum = 0;
		int i = 0;
		
		// Map 0
		gp.npc[mapNum][i] = new NPC_Hero_Reuben(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*23;
		gp.npc[mapNum][i].worldY = gp.tileSize*12;
		i++;
//		gp.npc[mapNum][i] = new NPC_OldMan(gp);
//		gp.npc[mapNum][i].worldX = gp.tileSize*26;
//		gp.npc[mapNum][i].worldY = gp.tileSize*16;
//		i++;
		gp.npc[mapNum][i] = new NPC_Merchant(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*11;
		gp.npc[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.npc[mapNum][i] = new NPC_Traveler(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*25;
		gp.npc[mapNum][i].worldY = gp.tileSize*23;
		i++;
		
		// Map 1
		mapNum = 1;
		i = 0;
		gp.npc[mapNum][i] = new NPC_Hero_Joy(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*13;
		gp.npc[mapNum][i].worldY = gp.tileSize*53;
		i++;
		gp.npc[mapNum][i] = new NPC_Merchant(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*86;
		gp.npc[mapNum][i].worldY = gp.tileSize*89;
		i++;
		gp.npc[mapNum][i] = new NPC_Traveler(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*49;
		gp.npc[mapNum][i].worldY = gp.tileSize*47;
		i++;
		gp.npc[mapNum][i] = new NPC_Miriam(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*17;
		gp.npc[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.npc[mapNum][i] = new NPC_Astro(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*37;
		gp.npc[mapNum][i].worldY = gp.tileSize*52;
		i++;
		
		mapNum = 3;
		i = 0;
		gp.npc[mapNum][i] = new NPC_BigRock(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*20;
		gp.npc[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.npc[mapNum][i] = new NPC_BigRock(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*11;
		gp.npc[mapNum][i].worldY = gp.tileSize*21;
		i++;
		gp.npc[mapNum][i] = new NPC_BigRock(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*30;
		gp.npc[mapNum][i].worldY = gp.tileSize*10;
		i++;
		
		mapNum = 5;
		i = 0;
		gp.npc[mapNum][i] = new NPC_Merchant(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*19;
		gp.npc[mapNum][i].worldY = gp.tileSize*61;
		i++;
		gp.npc[mapNum][i] = new NPC_Hero_Esther(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*10;
		gp.npc[mapNum][i].worldY = gp.tileSize*85;
		i++;
		gp.npc[mapNum][i] = new NPC_Traveler(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*22;
		gp.npc[mapNum][i].worldY = gp.tileSize*85;
		i++;
		
		
		mapNum = 6;
		i = 0;
		
		// Map 6
		gp.npc[mapNum][i] = new NPC_Merchant(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*81;
		gp.npc[mapNum][i].worldY = gp.tileSize*80;
		i++;
		gp.npc[mapNum][i] = new NPC_Hero_Daniel(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*55;
		gp.npc[mapNum][i].worldY = gp.tileSize*6;
		i++;
//		gp.npc[mapNum][i] = new NPC_Hero_Daniel(gp);
//		gp.npc[mapNum][i].worldX = gp.tileSize*21;
//		gp.npc[mapNum][i].worldY = gp.tileSize*8;
//		i++;
//		gp.npc[mapNum][i] = new NPC_Hero_Joy(gp);
//		gp.npc[mapNum][i].worldX = gp.tileSize*20;
//		gp.npc[mapNum][i].worldY = gp.tileSize*8;
//		i++;
//		gp.npc[mapNum][i] = new NPC_Hero_Reuben(gp);
//		gp.npc[mapNum][i].worldX = gp.tileSize*19;
//		gp.npc[mapNum][i].worldY = gp.tileSize*8;
//		i++;
//		gp.npc[mapNum][i] = new NPC_Hero_Esther(gp);
//		gp.npc[mapNum][i].worldX = gp.tileSize*18;
//		gp.npc[mapNum][i].worldY = gp.tileSize*8;
//		i++;
		
		gp.npc[mapNum][i] = new NPC_OldMan(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*28;
		gp.npc[mapNum][i].worldY = gp.tileSize*65;
		i++;
		gp.npc[mapNum][i] = new NPC_Hero_Chad(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*82;
		gp.npc[mapNum][i].worldY = gp.tileSize*92;
		i++;
		gp.npc[mapNum][i] = new NPC_Traveler(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*51;//87
		gp.npc[mapNum][i].worldY = gp.tileSize*51;//91
		i++;
		gp.npc[mapNum][i] = new NPC_Pixal(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*47;
		gp.npc[mapNum][i].worldY = gp.tileSize*47;
		i++;
		
		gp.npc[mapNum][i] = new NPC_Felix(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*63;
		gp.npc[mapNum][i].worldY = gp.tileSize*14;
		i++;
		gp.npc[mapNum][i] = new NPC_Paul(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*56;
		gp.npc[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.npc[mapNum][i] = new NPC_Quincy(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*29;
		gp.npc[mapNum][i].worldY = gp.tileSize*53;
		i++;
		gp.npc[mapNum][i] = new NPC_Sam(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*60;
		gp.npc[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.npc[mapNum][i] = new NPC_Sarah(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*80;
		gp.npc[mapNum][i].worldY = gp.tileSize*69;
		i++;
		gp.npc[mapNum][i] = new NPC_Timothy(gp);
		gp.npc[mapNum][i].worldX = gp.tileSize*36;
		gp.npc[mapNum][i].worldY = gp.tileSize*65;
		i++;
	}
	public void setMonster() {
		
		// All bosses will now fight alone! As of 11/25/2022, I think it's better this way.
		
		int mapNum = 0;
		int i = 0;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*21;
		gp.monster[mapNum][i].worldY = gp.tileSize*38;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*23;
		gp.monster[mapNum][i].worldY = gp.tileSize*42;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*24;
		gp.monster[mapNum][i].worldY = gp.tileSize*37;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*34;
		gp.monster[mapNum][i].worldY = gp.tileSize*42;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*38;
		gp.monster[mapNum][i].worldY = gp.tileSize*42;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*36;
		gp.monster[mapNum][i].worldY = gp.tileSize*21;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*38;
		gp.monster[mapNum][i].worldY = gp.tileSize*29;
		i++;
		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*38;//38//33, switched places with Axe
		gp.monster[mapNum][i].worldY = gp.tileSize*9;//9//7
		i++;
		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*23;
		gp.monster[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.monster[mapNum][i] = new MON_Orc(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*12;
		gp.monster[mapNum][i].worldY = gp.tileSize*29;
		i++;
		
		
		// I want to make another map at this point to have a boss fight
		// but for now, set the pirate right here.
		
		// Map 2
		mapNum = 1;
		i = 0;
//		gp.monster[mapNum][i] = new MON_Pirate(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*23;
//		gp.monster[mapNum][i].worldY = gp.tileSize*17;
//		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*14;
		gp.monster[mapNum][i].worldY = gp.tileSize*84;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*75;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*58;
		gp.monster[mapNum][i].worldY = gp.tileSize*48;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*83;
		gp.monster[mapNum][i].worldY = gp.tileSize*72;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*68;
		gp.monster[mapNum][i].worldY = gp.tileSize*75;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*35;
		gp.monster[mapNum][i].worldY = gp.tileSize*7;
		i++;
		gp.monster[mapNum][i] = new MON_Orc_Frost(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*28;
		gp.monster[mapNum][i].worldY = gp.tileSize*82;
		i++;
		
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*83;
		gp.monster[mapNum][i].worldY = gp.tileSize*66;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*27;
		gp.monster[mapNum][i].worldY = gp.tileSize*82;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*75;
		gp.monster[mapNum][i].worldY = gp.tileSize*91;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*79;
		gp.monster[mapNum][i].worldY = gp.tileSize*47;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*85;
		gp.monster[mapNum][i].worldY = gp.tileSize*18;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*13;
		gp.monster[mapNum][i].worldY = gp.tileSize*16;
		i++;
		
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*55;
		gp.monster[mapNum][i].worldY = gp.tileSize*58;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*39;
		gp.monster[mapNum][i].worldY = gp.tileSize*71;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*70;
		gp.monster[mapNum][i].worldY = gp.tileSize*79;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*51;
		gp.monster[mapNum][i].worldY = gp.tileSize*38;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*31;
		gp.monster[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*75;
		gp.monster[mapNum][i].worldY = gp.tileSize*28;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*15;
		gp.monster[mapNum][i].worldY = gp.tileSize*63;
		i++;
		
		
		mapNum = 2;
		i = 0;
		gp.monster[mapNum][i] = new MON_Pirate(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*24+24;
		gp.monster[mapNum][i].worldY = gp.tileSize*24+24;
		i++;
//		gp.monster[mapNum][i] = new MON_Skeleton(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*11;
//		gp.monster[mapNum][i].worldY = gp.tileSize*42;
//		i++;
//		gp.monster[mapNum][i] = new MON_Skeleton(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*38;
//		gp.monster[mapNum][i].worldY = gp.tileSize*42;
//		i++;
//		gp.monster[mapNum][i] = new MON_Skeleton(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*38;
//		gp.monster[mapNum][i].worldY = gp.tileSize*7;
//		i++;
//		gp.monster[mapNum][i] = new MON_Skeleton(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*11;
//		gp.monster[mapNum][i].worldY = gp.tileSize*7;
//		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*29;
		gp.monster[mapNum][i].worldY = gp.tileSize*33;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*29;
		gp.monster[mapNum][i].worldY = gp.tileSize*16;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*20;
		gp.monster[mapNum][i].worldY = gp.tileSize*16;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*20;
		gp.monster[mapNum][i].worldY = gp.tileSize*33;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*31;
		gp.monster[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*39;
		i++;
		
		mapNum = 3; // dungoen01
		i = 0;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*38;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*10;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*35;
		gp.monster[mapNum][i].worldY = gp.tileSize*26;
		i++;
//		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*34;
//		gp.monster[mapNum][i].worldY = gp.tileSize*39;
//		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*14;
		gp.monster[mapNum][i].worldY = gp.tileSize*20;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*25;
		gp.monster[mapNum][i].worldY = gp.tileSize*17;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*21;
		gp.monster[mapNum][i].worldY = gp.tileSize*22;
		i++;
		gp.monster[mapNum][i] = new MON_RedSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*26;
		gp.monster[mapNum][i].worldY = gp.tileSize*32;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*20;
		gp.monster[mapNum][i].worldY = gp.tileSize*10;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*17;
		gp.monster[mapNum][i].worldY = gp.tileSize*28;
		i++;
		gp.monster[mapNum][i] = new MON_Orc(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*33;
		gp.monster[mapNum][i].worldY = gp.tileSize*28;
		i++;
		
		gp.monster[mapNum][i] = new MON_Bat(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*35;
		gp.monster[mapNum][i].worldY = gp.tileSize*39;
		i++;
		gp.monster[mapNum][i] = new MON_Bat(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*36;
		gp.monster[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.monster[mapNum][i] = new MON_Bat(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*39;
		gp.monster[mapNum][i].worldY = gp.tileSize*26;
		i++;
		gp.monster[mapNum][i] = new MON_Bat(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*28;
		gp.monster[mapNum][i].worldY = gp.tileSize*11;
		i++;
		gp.monster[mapNum][i] = new MON_Bat(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*10;
		gp.monster[mapNum][i].worldY = gp.tileSize*19;
		i++;
		
		mapNum = 4; // Dungeon02
		i = 0;
		gp.monster[mapNum][i] = new MON_Skeleton_Boss(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*23;
		gp.monster[mapNum][i].worldY = gp.tileSize*16;
		i++;
		
		mapNum = 5;
		i = 0;
		gp.monster[mapNum][i] = new MON_Samurai(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*50-24;
		gp.monster[mapNum][i].worldY = gp.tileSize*50;
		i++;
		
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*15;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*72;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*79;
		gp.monster[mapNum][i].worldY = gp.tileSize*83;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*72;
		gp.monster[mapNum][i].worldY = gp.tileSize*73;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*45;
		gp.monster[mapNum][i].worldY = gp.tileSize*85;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*37;
		gp.monster[mapNum][i].worldY = gp.tileSize*23;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*70;
		gp.monster[mapNum][i].worldY = gp.tileSize*25;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*62;
		gp.monster[mapNum][i].worldY = gp.tileSize*78;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*48;
		gp.monster[mapNum][i].worldY = gp.tileSize*91;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*19;
		gp.monster[mapNum][i].worldY = gp.tileSize*56;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*37;
		gp.monster[mapNum][i].worldY = gp.tileSize*72;
		i++;
		gp.monster[mapNum][i] = new MON_Skeleton_Dark(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*64;
		gp.monster[mapNum][i].worldY = gp.tileSize*54;
		i++;
		
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*28;
		gp.monster[mapNum][i].worldY = gp.tileSize*88;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*69;
		gp.monster[mapNum][i].worldY = gp.tileSize*83;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*81;
		gp.monster[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*74;
		gp.monster[mapNum][i].worldY = gp.tileSize*23;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*51;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*26;
		gp.monster[mapNum][i].worldY = gp.tileSize*20;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*49;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*50;
		gp.monster[mapNum][i].worldY = gp.tileSize*74;
		i++;
		
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*42;
		gp.monster[mapNum][i].worldY = gp.tileSize*91;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*57;
		gp.monster[mapNum][i].worldY = gp.tileSize*81;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*71;
		gp.monster[mapNum][i].worldY = gp.tileSize*87;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*80;
		gp.monster[mapNum][i].worldY = gp.tileSize*84;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*72;
		gp.monster[mapNum][i].worldY = gp.tileSize*70;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*85;
		gp.monster[mapNum][i].worldY = gp.tileSize*63;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*34;
		gp.monster[mapNum][i].worldY = gp.tileSize*54;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*62;
		gp.monster[mapNum][i].worldY = gp.tileSize*60;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*72;
		gp.monster[mapNum][i].worldY = gp.tileSize*49;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*90;
		gp.monster[mapNum][i].worldY = gp.tileSize*45;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*79;
		gp.monster[mapNum][i].worldY = gp.tileSize*29;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*70;
		gp.monster[mapNum][i].worldY = gp.tileSize*10;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*60;
		gp.monster[mapNum][i].worldY = gp.tileSize*24;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*42;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*21;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*13;
		gp.monster[mapNum][i].worldY = gp.tileSize*8;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*30;
		gp.monster[mapNum][i].worldY = gp.tileSize*23;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*11;
		gp.monster[mapNum][i].worldY = gp.tileSize*27;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*23;
		gp.monster[mapNum][i].worldY = gp.tileSize*31;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*11;
		gp.monster[mapNum][i].worldY = gp.tileSize*43;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*14;
		gp.monster[mapNum][i].worldY = gp.tileSize*52;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*26;
		gp.monster[mapNum][i].worldY = gp.tileSize*62;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*11;
		gp.monster[mapNum][i].worldY = gp.tileSize*74;
		i++;
		gp.monster[mapNum][i] = new MON_FinalIslandSmallSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*44;
		gp.monster[mapNum][i].worldY = gp.tileSize*75;
		i++;
		
		
		mapNum = 6;
		i= 0;
		//forest near house
		
		
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*30;
		gp.monster[mapNum][i].worldY = gp.tileSize*24;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*26;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*18;
		gp.monster[mapNum][i].worldY = gp.tileSize*36;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*31;
		gp.monster[mapNum][i].worldY = gp.tileSize*34;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*36;
		gp.monster[mapNum][i].worldY = gp.tileSize*13;
		i++;
		gp.monster[mapNum][i] = new MON_Orc(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*35;
		gp.monster[mapNum][i].worldY = gp.tileSize*24;
		i++;
		
		//rest of world
		gp.monster[mapNum][i] = new MON_Orc(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*27;
		gp.monster[mapNum][i].worldY = gp.tileSize*86;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*19;
		gp.monster[mapNum][i].worldY = gp.tileSize*86;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*36;
		gp.monster[mapNum][i].worldY = gp.tileSize*91;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*59;
		gp.monster[mapNum][i].worldY = gp.tileSize*83;
		i++;
		gp.monster[mapNum][i] = new MON_GreenSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*80;
		gp.monster[mapNum][i].worldY = gp.tileSize*90;
		i++;
		
		mapNum = 7;
		i = 0;
		gp.monster[mapNum][i] = new MON_SlimeBoss(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*24;
		gp.monster[mapNum][i].worldY = gp.tileSize*24;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*15;
		gp.monster[mapNum][i].worldY = gp.tileSize*30;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*32;
		gp.monster[mapNum][i].worldY = gp.tileSize*35;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*30;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
		gp.monster[mapNum][i] = new MON_MistyMeadowsBigSlime(gp);
		gp.monster[mapNum][i].worldX = gp.tileSize*15;
		gp.monster[mapNum][i].worldY = gp.tileSize*15;
		i++;
//		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*12;
//		gp.monster[mapNum][i].worldY = gp.tileSize*8;
//		i++;
//		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*38;
//		gp.monster[mapNum][i].worldY = gp.tileSize*6;
//		i++;
//		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*39;
//		gp.monster[mapNum][i].worldY = gp.tileSize*41;
//		i++;
//		gp.monster[mapNum][i] = new MON_BlueSlime(gp);
//		gp.monster[mapNum][i].worldX = gp.tileSize*11;
//		gp.monster[mapNum][i].worldY = gp.tileSize*43;
//		i++;
	}
	public void setInteractiveTile() {
		int mapNum = 0;
		int i = 0;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,28,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,29,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,30,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,31,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,32,12);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,33,12);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,20,20);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,20,21);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,20,22);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,22,24);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,23,24);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,24,24);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,36,30);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,25,27);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,26,27);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,27);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,28);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,29);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,30);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,31);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,28,31);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,29,31);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,30,31);i++;
		
		
		// Cuttable forest leading to Trader
		gp.iTile[mapNum][i] = new IT_DryTree(gp,18,40);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,17,40);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,16,40);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,15,40);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,14,40);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,14,41);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,13,41);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,12,41);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,11,41);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,10,41);i++;
		mapNum = 1;
		i = 0;
		
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,23);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,24);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,25);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,26);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,27);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,28);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,29);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,30);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,31);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,32);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,33);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,34);i++;
		
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,34);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,35);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,36);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,37);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,38);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,36,15);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,36,14);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,35,14);i++;
		
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,28,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,29,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,30,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,31,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,32,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,33,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,34,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,35,13);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,28,12);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,28,11);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,29,11);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,29,10);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,30,10);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,30,9);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,31,9);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,31,8);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,32,8);i++;
		
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,36,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,37,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,38,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,39,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,40,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,41,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,42,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,43,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,44,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,45,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,46,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,47,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,48,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,49,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,50,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,51,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,52,93);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,52,92);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,53,92);i++;
		gp.iTile[mapNum][i] = new IT_MistyTree(gp,53,91);i++;
		
		mapNum = 3;
		i = 0;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,18,30);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,17,31);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,17,32);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,17,34);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,18,34);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,18,33);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,10,22);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,10,24);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,38,18);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,38,19);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,38,20);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,38,21);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,18,13);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,18,14);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,22,28);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,30,28);i++;
		gp.iTile[mapNum][i] = new IT_DestructibleWall(gp,32,28);i++;
		
		gp.iTile[mapNum][i] = new IT_MetalPlate(gp,20,22);i++;
		gp.iTile[mapNum][i] = new IT_MetalPlate(gp,14,20);i++;
		gp.iTile[mapNum][i] = new IT_MetalPlate(gp,39,31);i++;
		
		mapNum = 6;
		i = 0;
		
		// Traps in Hero, so hero can stay in designated spot for player to meet
		gp.iTile[mapNum][i] = new IT_DryTree(gp,48,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,45,9);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,44,9);i++;
		
		// leads to bottom-left corner building
		gp.iTile[mapNum][i] = new IT_DryTree(gp,14,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,15,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,16,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,17,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,18,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,19,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,20,93);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,20,92);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,21,92);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,22,92);i++;
		
		gp.iTile[mapNum][i] = new IT_DryTree(gp,22,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,23,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,24,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,25,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,26,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,28,93);i++;
		
		// leads away from starting house
		gp.iTile[mapNum][i] = new IT_DryTree(gp,25,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,26,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,27,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,28,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,29,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,30,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,31,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,32,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,33,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,34,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,35,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,36,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,37,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,38,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,39,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,40,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,41,6);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,42,6);i++;
		
		// leads to harbor (which hasn't been drawn in fully yet)
		gp.iTile[mapNum][i] = new IT_DryTree(gp,56,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,57,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,58,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,59,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,60,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,61,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,62,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,63,93);i++;
		gp.iTile[mapNum][i] = new IT_DryTree(gp,64,93);i++;
	}
}






